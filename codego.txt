import React, { useState, useEffect } from 'react';
import { Text, View, TextInput, Button, StyleSheet, Alert, ScrollView } from 'react-native';

const YourApp = () => {
  // Estados para os campos
  const [name, setName] = useState('');
  const [age, setAge] = useState('');
  const [height, setHeight] = useState('');
  const [email, setEmail] = useState('');
  const [city, setCity] = useState('');
  const [job, setJob] = useState('');
  const [mensagem, setMensagem] = useState('');
  const [heightMessage, setHeightMessage] = useState('');
  const [formValid, setFormValid] = useState(true); // Para validar o formulário

  // Lógica de mensagens de idade e altura
  useEffect(() => {
    let newMessage = '';

    if (name && age) {
      if (parseInt(age) < 18) {
        newMessage = `Olá, ${name}! Você é menor de idade!`;
      } else {
        newMessage = `Olá, ${name}! Você é maior de idade!`;
      }
    }

    setMensagem(newMessage);

    // Verificando a altura
    if (height) {
      const heightValue = parseFloat(height);
      if (heightValue < 1.5) {
        setHeightMessage(`Você é baixo! Sua altura é menor que 1,50m.`);
      } else {
        setHeightMessage('');
      }
    }
  }, [name, age, height]);

  // Função de validação para o formulário
  const validateForm = () => {
    if (!name || !age || !height || !email || !city || !job) {
      setFormValid(false);
      Alert.alert("Erro", "Todos os campos são obrigatórios!");
      return false;
    }

    // Validação de Email
    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$/;
    if (!emailRegex.test(email)) {
      setFormValid(false);
      Alert.alert("Erro", "Email inválido!");
      return false;
    }

    setFormValid(true);
    return true;
  };

  // Função para enviar o formulário
  const handleSubmit = () => {
    if (validateForm()) {
      Alert.alert('Sucesso', 'Formulário enviado com sucesso!');
    }
  };

  // Função para resetar o formulário
  const resetForm = () => {
    setName('');
    setAge('');
    setHeight('');
    setEmail('');
    setCity('');
    setJob('');
    setMensagem('');
    setHeightMessage('');
    setFormValid(true);
  };

  return (
    <ScrollView contentContainerStyle={styles.scrollContainer}>
      <View style={styles.container}>
        <Text style={styles.title}>Formulário Completo</Text>

        <View style={styles.inputContainer}>
          <Text style={styles.label}>Nome:</Text>
          <TextInput
            style={styles.input}
            placeholder="Digite seu nome"
            value={name}
            onChangeText={setName}
          />
        </View>

        <View style={styles.inputContainer}>
          <Text style={styles.label}>Idade:</Text>
          <TextInput
            style={styles.input}
            placeholder="Digite sua idade"
            keyboardType="numeric"
            value={age}
            onChangeText={setAge}
          />
        </View>

        <View style={styles.inputContainer}>
          <Text style={styles.label}>Altura (em metros):</Text>
          <TextInput
            style={styles.input}
            placeholder="Digite sua altura"
            keyboardType="numeric"
            value={height}
            onChangeText={setHeight}
          />
        </View>

        <View style={styles.inputContainer}>
          <Text style={styles.label}>Email:</Text>
          <TextInput
            style={styles.input}
            placeholder="Digite seu email"
            value={email}
            onChangeText={setEmail}
          />
        </View>

        <View style={styles.inputContainer}>
          <Text style={styles.label}>Cidade:</Text>
          <TextInput
            style={styles.input}
            placeholder="Digite sua cidade"
            value={city}
            onChangeText={setCity}
          />
        </View>

        <View style={styles.inputContainer}>
          <Text style={styles.label}>Profissão:</Text>
          <TextInput
            style={styles.input}
            placeholder="Digite sua profissão"
            value={job}
            onChangeText={setJob}
          />
        </View>

        <Text style={styles.resultText}>{mensagem}</Text>
        {heightMessage && <Text style={styles.heightMessage}>{heightMessage}</Text>}

        <View style={styles.buttonsContainer}>
          <Button title="Enviar" onPress={handleSubmit} color="#4CAF50" />
          <Button title="Resetar" onPress={resetForm} color="#F44336" />
        </View>
      </View>
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  scrollContainer: {
    flexGrow: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  container: {
    width: '100%',
    padding: 10,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 40,
    textAlign: 'center',
  },
  inputContainer: {
    width: '100%',
    marginBottom: 15,
  },
  label: {
    fontSize: 16,
    color: '#333',
    marginBottom: 8,
    fontWeight: '500',
  },
  input: {
    width: '100%',
    height: 30,
    borderRadius: 12,
    borderWidth: 1,
    borderColor: '#ddd',
    backgroundColor: '#fff',
    paddingHorizontal: 16,
    fontSize: 16,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 6,
    marginBottom: 10,
  },
  resultText: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#333',
    textAlign: 'center',
    backgroundColor: '#e1e1e1',
    padding: 15,
    borderRadius: 12,
    marginTop: 20,
    width: '90%',
    maxWidth: 350,
  },
  heightMessage: {
    fontSize: 16,
    fontWeight: 'bold',
    color: 'red',
    textAlign: 'center',
    marginTop: 15,
    width: '90%',
    maxWidth: 350,
  },
  buttonsContainer: {
    marginTop: 20,
    width: '100%',
    flexDirection: 'row',
    justifyContent: 'space-between',
  },
});

export default YourApp;
